# Define the stages of the CI pipeline
stages:
  - build
  - react_analysis
  - spring_analysis

# Set environment variables or configuration options
variables:
  # Disable Gradle Daemon to avoid potential issues with CI environment
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  JACOCO_CSV_LOCATION: "spring/build/reports/jacoco/test/jacocoTestReport.csv"

# Define the build stage
build:
  stage: build
  image: eclipse-temurin
  # Script to execute for the build stage
  script:
    - cd spring
    # Execute Gradle build excluding tests
    - ./gradlew build -x test
  # Define artifacts to be preserved from this stage
  artifacts:
    paths:
      # Specify the path to the generated JAR file
      - spring/build/libs/*.jar

react_analysis:
  stage: react_analysis
  image: node:latest
  script:
    - cd react
    - npm install
    - npm run lint
  allow_failure: true

spring_analysis:
  stage: spring_analysis
  image: eclipse-temurin
  coverage: "/Total.*?([0-9]{1,3})%/"
  script:
    - cd spring
    - ./gradlew check
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print "Total coverage:\s", 100*covered/instructions,  "%"}' build/reports/jacoco/test/jacocoTestReport.csv
  artifacts:
    paths:
      - spring/build/reports/pmd/main.html
      - spring/build/reports/pmd/test.html
      - spring/build/reports/jacoco/test/jacocoTestReport.csv
